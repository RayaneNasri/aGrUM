#include <string>
#include <sstream>
#include <algorithm>
#include <fstream>

namespace std {
  #include<dirent.h>
}

#include <agrum/prm/skoor/SkoorContext.h>


COMPILER skoor

gum::prm::skoor::SkoorContext *__context;
gum::prm::skoor::SkoorSession *__currentSession;

void SemErr(std::string s) {
  SemErr(widen(s).c_str());
}

void setSkoorContext(gum::prm::skoor::SkoorContext *c) {
  __context=c;
}

//=====================
CHARACTERS
  letter = 'A'..'Z' + 'a'..'z'+ '_'.
  digit  = '0'..'9'.
  eol    = '\n'.
  dot    = '.'.

//=====================
TOKENS
  integer     = ['+'|'-'] digit {digit}.
  float       = ['+'|'-'] digit {digit} '.' digit {digit} [ ('E'|'e') ['+'|'-'] digit {digit} ].
  word        = letter {(letter | digit | dot)}.
  eol         = '\n'.
  package     = "package".
  import      = "import".
  request     = "request".
  query       = '?'.
  unobserve   = "unobserve".
  engine      = "engine".
  grd_engine  = "grd_engine".

//=====================
COMMENTS FROM "/*" TO "*/" NESTED
COMMENTS FROM "//" TO eol

IGNORE '\r' + eol + '\t' + ' '

$checkEOF=false // disable the end of file check

//=====================
PRODUCTIONS

//=====================
skoor =
          [ package word (. __context->setPackage( gum::narrow(t->val) ); .) ';' ]
          [ import word (. __context->addImport( t->line, gum::narrow(t->val) ); .) ';']
          { RequestBloc }.

RequestBloc = request word  (. __currentSession = new SkoorSession(gum::narrow(t->val)); .)
              '{' {
                    ( Observe |
                      Unobserve |
                      Query |
                      SetEngine |
                      SetGrdEngine )
              } '}' (. __context->addSession( __currentSession ); .)
              .
//=====================
Observe =          (. std::string left_value, right_value; .)
          word     (. left_value = gum::narrow(t->val); .)
          '=' word (. right_value = gum::narrow(t->val); .)
          ';'      (. __currentSession->addObserve(t->line, left_value, right_value); .)
          .

//=====================
Unobserve = unobserve word (. __currentSession->addUnobserve( t->line, gum::narrow(t->val) ); .)
            ';'
            .

//=====================
Query = '?' word (. __currentSession->addQuery( t->line, gum::narrow(t->val) ); .) ';'
        .

//=====================
SetEngine = engine word (. __currentSession->addSetEngine( t->line, gum::narrow(t->val) ); .) ';'.

//=====================
SetGrdEngine = grd_engine word (. __currentSession->addSetGndEngine( t->line, gum::narrow(t->val) ); .) ';'.

END skoor.

