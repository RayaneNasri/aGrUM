type t_color red, blue, green, yellow;

class SomeClass {
   t_color color { [ 0.1, 0.2, 0.3, 0.4 ] };

}

class HappyClass {
  SomeClass[] A;
  boolean has_red = exists ([A.color], red);
  boolean has_blue = exists ([A.color], blue);
  boolean has_green = forall ([A.color], green);
  boolean has_yellow = forall ([A.color], yellow);
  boolean all_colors = and( [ has_red, has_blue, has_green, has_yellow ] );
  boolean any_colors = or( [ has_red, has_blue, has_green, has_yellow ] );
  t_color infrared = min( [ has_red, has_blue, has_green, has_yellow ]);  
  t_color ultra_violet = max( [ has_red, has_blue, has_green, has_yellow ]);  
  t_color median = median( [ has_red, has_blue, has_green, has_yellow ]);  
  t_color amp = amplitude( [ has_red, has_blue, has_green, has_yellow ]);  

  boolean yolo dependson infrared, ultra_violet, median, amp {
    *, *, *, *: 0.99, 0.01;
    green, green, green, green : 0.01, 0.99;
  };

  boolean happy dependson all_colors, any_colors, yolo {
    *, *, *: 0.01, 0.99;
    false, false, false: 0.99, 0.001;
  };

}

system aSys {
 SomeClass[2] some_classes;
 HappyClass happy;
 happy.A += some_classes;
}

