int(0, 10) skill;

type armor 2, 3, 4, 5, 6, none;

interface BS {
  skill bs;
  skill s;
  armor ap;
}

interface Def {
  skill t;
  armor svg;
  armor cvr;
  armor inv;
}
  
class Hits {
  BS atk;
  Def def;

  // Intermediate attribute for hits probability
  boolean _hits dependson atk.bs {
  // bs: false, true
      *: "1/6", "5/6";
      0:   "1",   "0";
      1: "5/6", "1/6";
      2: "4/6", "2/6";
      3: "3/6", "3/6";
      4: "2/6", "4/6";
      5: "1/6", "5/6";
  };

  boolean hits dependson _hits, atk.bs {
  // bool, bs: false, true
    false,  *:   "1",   "0";
     true,  *:   "0",   "1";
     true,  6: "5/6", "1/6"; 
     true,  7: "4/6", "2/6"; 
     true,  8: "3/6", "3/6"; 
     true,  9: "2/6", "4/6"; 
     true, 10: "1/6", "5/6"; 
  };

  boolean _wounds dependson atk.s, def.t
  {
  //s, t: false, true
    *, *: 1, 0;
    // 1 -> (1, 4)
    1, 1: "3/6", "3/6";
    1, 2: "4/6", "2/6";
    1, 3: "5/6", "1/6";
    1, 4: "5/6", "1/6";
    // 2 -> (1, 5)
    2, 1: "2/6", "4/6";
    2, 2: "3/6", "3/6";
    2, 3: "4/6", "2/6";
    2, 4: "5/6", "1/6";
    2, 5: "5/6", "1/6";
    // 3 -> (1, 6)
    3, 1: "1/6", "5/6";
    3, 2: "2/6", "4/6";
    3, 3: "3/6", "3/6";
    3, 4: "4/6", "2/6";
    3, 5: "5/6", "1/6";
    3, 6: "5/6", "1/6";
    // 4 -> (1, 7)
    4, 1: "1/6", "5/6";
    4, 2: "1/6", "5/6";
    4, 3: "2/6", "4/6";
    4, 4: "3/6", "3/6";
    4, 5: "4/6", "2/6";
    4, 6: "5/6", "1/6";
    4, 7: "5/6", "1/6";
    // 5 -> (1, 8)
    5, 1: "1/6", "5/6";
    5, 2: "1/6", "5/6";
    5, 3: "1/6", "5/6";
    5, 4: "2/6", "4/6";
    5, 5: "3/6", "3/6";
    5, 6: "4/6", "2/6";
    5, 7: "5/6", "1/6";
    5, 8: "5/6", "1/6";
    // 6 -> (1, 9)
    6, 1: "1/6", "5/6";
    6, 2: "1/6", "5/6";
    6, 3: "1/6", "5/6";
    6, 4: "1/6", "5/6";
    6, 5: "2/6", "4/6";
    6, 6: "3/6", "3/6";
    6, 7: "4/6", "2/6";
    6, 8: "5/6", "1/6";
    6, 9: "5/6", "1/6";
    // 7 -> (1, 10)
    7, 1: "1/6", "5/6";
    7, 2: "1/6", "5/6";
    7, 3: "1/6", "5/6";
    7, 4: "1/6", "5/6";
    7, 5: "1/6", "5/6";
    7, 6: "2/6", "4/6";
    7, 7: "3/6", "3/6";
    7, 8: "4/6", "2/6";
    7, 9: "5/6", "1/6";
    7,10: "5/6", "1/6";
    // 8 -> (1, 10)
    8, 1: "1/6", "5/6";
    8, 2: "1/6", "5/6";
    8, 3: "1/6", "5/6";
    8, 4: "1/6", "5/6";
    8, 5: "1/6", "5/6";
    8, 6: "1/6", "5/6";
    8, 7: "2/6", "4/6";
    8, 8: "3/6", "3/6";
    8, 9: "4/6", "2/6";
    8,10: "5/6", "1/6";
    // 9 -> (1, 10)
    9, 1: "1/6", "5/6";
    9, 2: "1/6", "5/6";
    9, 3: "1/6", "5/6";
    9, 4: "1/6", "5/6";
    9, 5: "1/6", "5/6";
    9, 6: "1/6", "5/6";
    9, 7: "1/6", "5/6";
    9, 8: "2/6", "4/6";
    9, 9: "3/6", "3/6";
    9,10: "4/6", "2/6";
    // 10 -> (1, 10)
    10, 1: "1/6", "5/6";
    10, 2: "1/6", "5/6";
    10, 3: "1/6", "5/6";
    10, 4: "1/6", "5/6";
    10, 5: "1/6", "5/6";
    10, 6: "1/6", "5/6";
    10, 7: "1/6", "5/6";
    10, 8: "1/6", "5/6";
    10, 9: "2/6", "4/6";
    10,10: "3/6", "3/6";
  };

  boolean wounds = and([hits, _wounds]);

}

class SpaceMarine implements BS, Def {

  skill bs { [
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
     0, 0, 0, 0, 1, 0, 0, 0, 0, 0,  0
  ] };

  skill s { [
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
     0, 0, 0, 0, 1, 0, 0, 0, 0, 0,  0
  ] };

  skill t { [
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
     0, 0, 0, 0, 1, 0, 0, 0, 0, 0,  0
  ] };

  armor ap { [
  // 2, 3, 4, 5, 6, n/a
     0, 0, 0, 1, 0,   0
  ] };

  armor svg { [
  // 2, 3, 4, 5, 6, n/a
     0, 1, 0, 0, 0,   0
  ] };

  armor cvr { [
  // 2, 3, 4, 5, 6, n/a
     0, 0, 0, 0, 0,   1
  ] };

  armor inv { [
  // 2, 3, 4, 5, 6, n/a
     0, 0, 0, 0, 0,   1
  ] };
}

system t1 {
  SpaceMarine um;
  SpaceMarine wb;
  Hits hits;
  hits.atk = um;
  hits.def = wb;
}

