// Arbres de défaillance en O3prm (limités aux portes ET et OU, 
// avec proba de défaillance dépendant du temps pour une feuille)

interface Event {
	boolean state;
}

interface Gate extends Event{
	Event[] inputs ;
}

class OrGate implements Gate {
	Event[] inputs ;
	boolean state = exists(inputs.state, true);
}

class AndGate implements Gate {
	Event[] inputs ;
	boolean state = forall(inputs.state, true);
}

type intervalle zero, un, deux, trois, quatre, cinq ;
type intervalle_K zero, un, deux, trois;

class k_nGate implements Gate {
	Event[] inputs ;

	intervalle Nb_true = count(inputs.state, true);

  intervalle_K K {[0.25, 0.25, 0.25, 0.25]};

  boolean state dependson K, Nb_true 
  {
    *, *:         1.00, 0.00;
    trois, zero:  0.00, 1.00;
    trois, un:    0.00, 1.00;
    trois, deux:  0.00, 1.00;
    trois, trois: 0.00, 1.00;
  };
}      

class Leaf implements Event {
	// le "paramètre" lambda est le taux de défaillance
	real lambda default 0.003;
  int t default 8760;
	
	boolean state {
		["exp(- lambda *t)", "1 -exp(- lambda *t)" ]
	};
}
