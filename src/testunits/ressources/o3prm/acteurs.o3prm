type val labels(un,deux);

interface IActor {
    val Productivity;
    val Capacity;
    val Cost;
}

class Actor0 implements IActor {
   val Productivity { [ 0.5,0.5]};
   val Capacity { [ 0.5,0.5]};
   val Cost dependson Productivity, Capacity {[0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5]};
}

class Actor implements IActor {
	IActor[] IA;
	boolean Agg_Productivity = exists (IA.Productivity,un);
	val Capacity { [ 0.5,0.5 ] };	
	val Productivity dependson Agg_Productivity {[ 0.5,0.5,0.5,0.5 ]};
    val Cost dependson Productivity, Capacity {[0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5]};
}  


system aSys {
Actor0 A0;
Actor0 A1;
Actor A2;
A2.IA+=A0;
A2.IA+=A1;
}
