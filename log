In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h: In instantiation of ‘gum::NodeId gum::DecisionGraphRecur4Addition(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string) [with GUM_SCALAR = float; gum::NodeId = unsigned int; std::string = std::basic_string<char>]’:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/operatorPattern4MultiDimDecisionGraph.h:89:110:   required from ‘gum::MultiDimImplementation<GUM_SCALAR>* gum::add2MultiDimDecisionGraphs(const gum::MultiDimImplementation<GUM_SCALAR>*, const gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:688:66:   required from ‘void gum::operators4MultiDimInit() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:394:55:   required from ‘void gum::Operators4MultiDimInitialize<GUM_SCALAR>::init() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:49:7:   required from ‘gum::MultiDimDecorator<GUM_SCALAR>::MultiDimDecorator(gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.tcc:34:69:   required from ‘gum::Potential<GUM_SCALAR>::Potential() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:23:21:   required from here
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
           indexFin = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                    ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:142:25: error: ‘class gum::MultiDimDecisionGraphManager<float>’ has no member named ‘checkIsomorphism’
                 newNode = opData.DG3->manager()->checkIsomorphism( preneededVar, sonsIds );
                         ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<float>::addNonTerminalNode(const gum::DiscreteVariable*&, gum::NodeId*&)’
                   newNode = opData.DG3->manager()->addNonTerminalNode( preneededVar, sonsIds );
                           ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int] <near match>
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 2 from ‘gum::NodeId* {aka unsigned int*}’ to ‘gum::NodeId {aka unsigned int}’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexLeader = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexFollower = opData.DG3->variablesSequence().pos( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar );
                       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: invalid use of member function (did you forget the ‘()’ ?)
         NodeId* sonsIds = static_cast<NodeId*>( MultiDimDecisionGraph<GUM_SCALAR>::soa.allocate( leaderNode->nodeVar->domainSize() * sizeof( NodeId ) ) );
                                                                                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: invalid use of member function (did you forget the ‘()’ ?)
         for ( Idx modality = 0; modality < leaderNode->nodeVar->domainSize(); modality++ ) {
                                                               ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:224:56: error: ‘const class gum::MultiDimDecisionGraph<float>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG1Node( leaderNode->nodeSons[ modality ] );
                                                        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:225:58: error: ‘const class gum::MultiDimDecisionGraph<float>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG2Node( followerNode->nodeSons[ modality ] );
                                                          ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: error: no matching function for call to ‘DecisionGraphRecur4Addition(gum::DGNonOrderedOperatorData<float>&, <unresolved overloaded function type>, std::string&)’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:375:53: note: template<class GUM_SCALAR> gum::NodeId gum::DecisionGraphRecur4Addition(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string)
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Addition
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:375:53: note:   template argument deduction/substitution failed:
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Addition
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note:   cannot convert ‘leaderNode->gum::MultiDimDecisionGraph<GUM_SCALAR>::InternalNode::nodeVar<float>’ (type ‘<unresolved overloaded function type>’) to type ‘const gum::DiscreteVariable*’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: invalid use of member function (did you forget the ‘()’ ?)
             MultiDimDecisionGraph<GUM_SCALAR>::soa.deallocate( sonsIds, leaderNode->nodeVar->domainSize() * sizeof( NodeId ) );
                                                                                            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:236:19: error: ‘class gum::MultiDimDecisionGraphManager<float>’ has no member named ‘checkIsomorphism’
           newNode = opData.DG3->manager()->checkIsomorphism( leaderNode->nodeVar, sonsIds );
                   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<float>::addNonTerminalNode(<unresolved overloaded function type>, gum::NodeId*&)’
             newNode = opData.DG3->manager()->addNonTerminalNode( leaderNode->nodeVar, sonsIds );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h: In instantiation of ‘gum::NodeId gum::DecisionGraphRecur4Subtraction(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string) [with GUM_SCALAR = float; gum::NodeId = unsigned int; std::string = std::basic_string<char>]’:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/operatorPattern4MultiDimDecisionGraph.h:89:110:   required from ‘gum::MultiDimImplementation<GUM_SCALAR>* gum::subtract2MultiDimDecisionGraphs(const gum::MultiDimImplementation<GUM_SCALAR>*, const gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:690:71:   required from ‘void gum::operators4MultiDimInit() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:394:55:   required from ‘void gum::Operators4MultiDimInitialize<GUM_SCALAR>::init() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:49:7:   required from ‘gum::MultiDimDecorator<GUM_SCALAR>::MultiDimDecorator(gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.tcc:34:69:   required from ‘gum::Potential<GUM_SCALAR>::Potential() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:23:21:   required from here
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
           indexFin = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                    ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:142:25: error: ‘class gum::MultiDimDecisionGraphManager<float>’ has no member named ‘checkIsomorphism’
                 newNode = opData.DG3->manager()->checkIsomorphism( preneededVar, sonsIds );
                         ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<float>::addNonTerminalNode(const gum::DiscreteVariable*&, gum::NodeId*&)’
                   newNode = opData.DG3->manager()->addNonTerminalNode( preneededVar, sonsIds );
                           ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int] <near match>
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 2 from ‘gum::NodeId* {aka unsigned int*}’ to ‘gum::NodeId {aka unsigned int}’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexLeader = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexFollower = opData.DG3->variablesSequence().pos( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar );
                       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: invalid use of member function (did you forget the ‘()’ ?)
         NodeId* sonsIds = static_cast<NodeId*>( MultiDimDecisionGraph<GUM_SCALAR>::soa.allocate( leaderNode->nodeVar->domainSize() * sizeof( NodeId ) ) );
                                                                                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: invalid use of member function (did you forget the ‘()’ ?)
         for ( Idx modality = 0; modality < leaderNode->nodeVar->domainSize(); modality++ ) {
                                                               ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:224:56: error: ‘const class gum::MultiDimDecisionGraph<float>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG1Node( leaderNode->nodeSons[ modality ] );
                                                        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:225:58: error: ‘const class gum::MultiDimDecisionGraph<float>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG2Node( followerNode->nodeSons[ modality ] );
                                                          ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: error: no matching function for call to ‘DecisionGraphRecur4Subtraction(gum::DGNonOrderedOperatorData<float>&, <unresolved overloaded function type>, std::string&)’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:406:53: note: template<class GUM_SCALAR> gum::NodeId gum::DecisionGraphRecur4Subtraction(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string)
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Subtraction
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:406:53: note:   template argument deduction/substitution failed:
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Subtraction
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note:   cannot convert ‘leaderNode->gum::MultiDimDecisionGraph<GUM_SCALAR>::InternalNode::nodeVar<float>’ (type ‘<unresolved overloaded function type>’) to type ‘const gum::DiscreteVariable*’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: invalid use of member function (did you forget the ‘()’ ?)
             MultiDimDecisionGraph<GUM_SCALAR>::soa.deallocate( sonsIds, leaderNode->nodeVar->domainSize() * sizeof( NodeId ) );
                                                                                            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:236:19: error: ‘class gum::MultiDimDecisionGraphManager<float>’ has no member named ‘checkIsomorphism’
           newNode = opData.DG3->manager()->checkIsomorphism( leaderNode->nodeVar, sonsIds );
                   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<float>::addNonTerminalNode(<unresolved overloaded function type>, gum::NodeId*&)’
             newNode = opData.DG3->manager()->addNonTerminalNode( leaderNode->nodeVar, sonsIds );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h: In instantiation of ‘gum::NodeId gum::DecisionGraphRecur4Multiplication(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string) [with GUM_SCALAR = float; gum::NodeId = unsigned int; std::string = std::basic_string<char>]’:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/operatorPattern4MultiDimDecisionGraph.h:89:110:   required from ‘gum::MultiDimImplementation<GUM_SCALAR>* gum::multiply2MultiDimDecisionGraphs(const gum::MultiDimImplementation<GUM_SCALAR>*, const gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:692:71:   required from ‘void gum::operators4MultiDimInit() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:394:55:   required from ‘void gum::Operators4MultiDimInitialize<GUM_SCALAR>::init() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:49:7:   required from ‘gum::MultiDimDecorator<GUM_SCALAR>::MultiDimDecorator(gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.tcc:34:69:   required from ‘gum::Potential<GUM_SCALAR>::Potential() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:23:21:   required from here
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
           indexFin = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                    ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:142:25: error: ‘class gum::MultiDimDecisionGraphManager<float>’ has no member named ‘checkIsomorphism’
                 newNode = opData.DG3->manager()->checkIsomorphism( preneededVar, sonsIds );
                         ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<float>::addNonTerminalNode(const gum::DiscreteVariable*&, gum::NodeId*&)’
                   newNode = opData.DG3->manager()->addNonTerminalNode( preneededVar, sonsIds );
                           ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int] <near match>
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 2 from ‘gum::NodeId* {aka unsigned int*}’ to ‘gum::NodeId {aka unsigned int}’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexLeader = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexFollower = opData.DG3->variablesSequence().pos( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar );
                       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: invalid use of member function (did you forget the ‘()’ ?)
         NodeId* sonsIds = static_cast<NodeId*>( MultiDimDecisionGraph<GUM_SCALAR>::soa.allocate( leaderNode->nodeVar->domainSize() * sizeof( NodeId ) ) );
                                                                                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: invalid use of member function (did you forget the ‘()’ ?)
         for ( Idx modality = 0; modality < leaderNode->nodeVar->domainSize(); modality++ ) {
                                                               ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:224:56: error: ‘const class gum::MultiDimDecisionGraph<float>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG1Node( leaderNode->nodeSons[ modality ] );
                                                        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:225:58: error: ‘const class gum::MultiDimDecisionGraph<float>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG2Node( followerNode->nodeSons[ modality ] );
                                                          ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: error: no matching function for call to ‘DecisionGraphRecur4Multiplication(gum::DGNonOrderedOperatorData<float>&, <unresolved overloaded function type>, std::string&)’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:437:53: note: template<class GUM_SCALAR> gum::NodeId gum::DecisionGraphRecur4Multiplication(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string)
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Multiplication
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:437:53: note:   template argument deduction/substitution failed:
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Multiplication
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note:   cannot convert ‘leaderNode->gum::MultiDimDecisionGraph<GUM_SCALAR>::InternalNode::nodeVar<float>’ (type ‘<unresolved overloaded function type>’) to type ‘const gum::DiscreteVariable*’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: invalid use of member function (did you forget the ‘()’ ?)
             MultiDimDecisionGraph<GUM_SCALAR>::soa.deallocate( sonsIds, leaderNode->nodeVar->domainSize() * sizeof( NodeId ) );
                                                                                            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:236:19: error: ‘class gum::MultiDimDecisionGraphManager<float>’ has no member named ‘checkIsomorphism’
           newNode = opData.DG3->manager()->checkIsomorphism( leaderNode->nodeVar, sonsIds );
                   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<float>::addNonTerminalNode(<unresolved overloaded function type>, gum::NodeId*&)’
             newNode = opData.DG3->manager()->addNonTerminalNode( leaderNode->nodeVar, sonsIds );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h: In instantiation of ‘gum::NodeId gum::DecisionGraphRecur4Division(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string) [with GUM_SCALAR = float; gum::NodeId = unsigned int; std::string = std::basic_string<char>]’:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/operatorPattern4MultiDimDecisionGraph.h:89:110:   required from ‘gum::MultiDimImplementation<GUM_SCALAR>* gum::divide2MultiDimDecisionGraphs(const gum::MultiDimImplementation<GUM_SCALAR>*, const gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:694:69:   required from ‘void gum::operators4MultiDimInit() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:394:55:   required from ‘void gum::Operators4MultiDimInitialize<GUM_SCALAR>::init() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:49:7:   required from ‘gum::MultiDimDecorator<GUM_SCALAR>::MultiDimDecorator(gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.tcc:34:69:   required from ‘gum::Potential<GUM_SCALAR>::Potential() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:23:21:   required from here
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
           indexFin = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                    ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:142:25: error: ‘class gum::MultiDimDecisionGraphManager<float>’ has no member named ‘checkIsomorphism’
                 newNode = opData.DG3->manager()->checkIsomorphism( preneededVar, sonsIds );
                         ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<float>::addNonTerminalNode(const gum::DiscreteVariable*&, gum::NodeId*&)’
                   newNode = opData.DG3->manager()->addNonTerminalNode( preneededVar, sonsIds );
                           ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int] <near match>
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 2 from ‘gum::NodeId* {aka unsigned int*}’ to ‘gum::NodeId {aka unsigned int}’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexLeader = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexFollower = opData.DG3->variablesSequence().pos( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar );
                       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: invalid use of member function (did you forget the ‘()’ ?)
         NodeId* sonsIds = static_cast<NodeId*>( MultiDimDecisionGraph<GUM_SCALAR>::soa.allocate( leaderNode->nodeVar->domainSize() * sizeof( NodeId ) ) );
                                                                                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: invalid use of member function (did you forget the ‘()’ ?)
         for ( Idx modality = 0; modality < leaderNode->nodeVar->domainSize(); modality++ ) {
                                                               ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:224:56: error: ‘const class gum::MultiDimDecisionGraph<float>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG1Node( leaderNode->nodeSons[ modality ] );
                                                        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:225:58: error: ‘const class gum::MultiDimDecisionGraph<float>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG2Node( followerNode->nodeSons[ modality ] );
                                                          ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: error: no matching function for call to ‘DecisionGraphRecur4Division(gum::DGNonOrderedOperatorData<float>&, <unresolved overloaded function type>, std::string&)’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:467:53: note: template<class GUM_SCALAR> gum::NodeId gum::DecisionGraphRecur4Division(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string)
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Division
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:467:53: note:   template argument deduction/substitution failed:
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Division
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note:   cannot convert ‘leaderNode->gum::MultiDimDecisionGraph<GUM_SCALAR>::InternalNode::nodeVar<float>’ (type ‘<unresolved overloaded function type>’) to type ‘const gum::DiscreteVariable*’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: invalid use of member function (did you forget the ‘()’ ?)
             MultiDimDecisionGraph<GUM_SCALAR>::soa.deallocate( sonsIds, leaderNode->nodeVar->domainSize() * sizeof( NodeId ) );
                                                                                            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:236:19: error: ‘class gum::MultiDimDecisionGraphManager<float>’ has no member named ‘checkIsomorphism’
           newNode = opData.DG3->manager()->checkIsomorphism( leaderNode->nodeVar, sonsIds );
                   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<float>::addNonTerminalNode(<unresolved overloaded function type>, gum::NodeId*&)’
             newNode = opData.DG3->manager()->addNonTerminalNode( leaderNode->nodeVar, sonsIds );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h: In instantiation of ‘gum::NodeId gum::DecisionGraphRecur4Addition(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string) [with GUM_SCALAR = double; gum::NodeId = unsigned int; std::string = std::basic_string<char>]’:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/operatorPattern4MultiDimDecisionGraph.h:89:110:   required from ‘gum::MultiDimImplementation<GUM_SCALAR>* gum::add2MultiDimDecisionGraphs(const gum::MultiDimImplementation<GUM_SCALAR>*, const gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:688:66:   required from ‘void gum::operators4MultiDimInit() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:394:55:   required from ‘void gum::Operators4MultiDimInitialize<GUM_SCALAR>::init() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:49:7:   required from ‘gum::MultiDimDecorator<GUM_SCALAR>::MultiDimDecorator(gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.tcc:34:69:   required from ‘gum::Potential<GUM_SCALAR>::Potential() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:24:21:   required from here
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
           indexFin = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                    ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:142:25: error: ‘class gum::MultiDimDecisionGraphManager<double>’ has no member named ‘checkIsomorphism’
                 newNode = opData.DG3->manager()->checkIsomorphism( preneededVar, sonsIds );
                         ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<double>::addNonTerminalNode(const gum::DiscreteVariable*&, gum::NodeId*&)’
                   newNode = opData.DG3->manager()->addNonTerminalNode( preneededVar, sonsIds );
                           ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int] <near match>
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 2 from ‘gum::NodeId* {aka unsigned int*}’ to ‘gum::NodeId {aka unsigned int}’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexLeader = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexFollower = opData.DG3->variablesSequence().pos( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar );
                       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: invalid use of member function (did you forget the ‘()’ ?)
         NodeId* sonsIds = static_cast<NodeId*>( MultiDimDecisionGraph<GUM_SCALAR>::soa.allocate( leaderNode->nodeVar->domainSize() * sizeof( NodeId ) ) );
                                                                                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: invalid use of member function (did you forget the ‘()’ ?)
         for ( Idx modality = 0; modality < leaderNode->nodeVar->domainSize(); modality++ ) {
                                                               ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:224:56: error: ‘const class gum::MultiDimDecisionGraph<double>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG1Node( leaderNode->nodeSons[ modality ] );
                                                        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:225:58: error: ‘const class gum::MultiDimDecisionGraph<double>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG2Node( followerNode->nodeSons[ modality ] );
                                                          ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: error: no matching function for call to ‘DecisionGraphRecur4Addition(gum::DGNonOrderedOperatorData<double>&, <unresolved overloaded function type>, std::string&)’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:375:53: note: template<class GUM_SCALAR> gum::NodeId gum::DecisionGraphRecur4Addition(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string)
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Addition
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:375:53: note:   template argument deduction/substitution failed:
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Addition
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note:   cannot convert ‘leaderNode->gum::MultiDimDecisionGraph<GUM_SCALAR>::InternalNode::nodeVar<double>’ (type ‘<unresolved overloaded function type>’) to type ‘const gum::DiscreteVariable*’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: invalid use of member function (did you forget the ‘()’ ?)
             MultiDimDecisionGraph<GUM_SCALAR>::soa.deallocate( sonsIds, leaderNode->nodeVar->domainSize() * sizeof( NodeId ) );
                                                                                            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:236:19: error: ‘class gum::MultiDimDecisionGraphManager<double>’ has no member named ‘checkIsomorphism’
           newNode = opData.DG3->manager()->checkIsomorphism( leaderNode->nodeVar, sonsIds );
                   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<double>::addNonTerminalNode(<unresolved overloaded function type>, gum::NodeId*&)’
             newNode = opData.DG3->manager()->addNonTerminalNode( leaderNode->nodeVar, sonsIds );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h: In instantiation of ‘gum::NodeId gum::DecisionGraphRecur4Subtraction(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string) [with GUM_SCALAR = double; gum::NodeId = unsigned int; std::string = std::basic_string<char>]’:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/operatorPattern4MultiDimDecisionGraph.h:89:110:   required from ‘gum::MultiDimImplementation<GUM_SCALAR>* gum::subtract2MultiDimDecisionGraphs(const gum::MultiDimImplementation<GUM_SCALAR>*, const gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:690:71:   required from ‘void gum::operators4MultiDimInit() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:394:55:   required from ‘void gum::Operators4MultiDimInitialize<GUM_SCALAR>::init() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:49:7:   required from ‘gum::MultiDimDecorator<GUM_SCALAR>::MultiDimDecorator(gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.tcc:34:69:   required from ‘gum::Potential<GUM_SCALAR>::Potential() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:24:21:   required from here
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
           indexFin = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                    ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:142:25: error: ‘class gum::MultiDimDecisionGraphManager<double>’ has no member named ‘checkIsomorphism’
                 newNode = opData.DG3->manager()->checkIsomorphism( preneededVar, sonsIds );
                         ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<double>::addNonTerminalNode(const gum::DiscreteVariable*&, gum::NodeId*&)’
                   newNode = opData.DG3->manager()->addNonTerminalNode( preneededVar, sonsIds );
                           ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int] <near match>
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 2 from ‘gum::NodeId* {aka unsigned int*}’ to ‘gum::NodeId {aka unsigned int}’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexLeader = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexFollower = opData.DG3->variablesSequence().pos( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar );
                       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: invalid use of member function (did you forget the ‘()’ ?)
         NodeId* sonsIds = static_cast<NodeId*>( MultiDimDecisionGraph<GUM_SCALAR>::soa.allocate( leaderNode->nodeVar->domainSize() * sizeof( NodeId ) ) );
                                                                                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: invalid use of member function (did you forget the ‘()’ ?)
         for ( Idx modality = 0; modality < leaderNode->nodeVar->domainSize(); modality++ ) {
                                                               ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:224:56: error: ‘const class gum::MultiDimDecisionGraph<double>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG1Node( leaderNode->nodeSons[ modality ] );
                                                        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:225:58: error: ‘const class gum::MultiDimDecisionGraph<double>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG2Node( followerNode->nodeSons[ modality ] );
                                                          ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: error: no matching function for call to ‘DecisionGraphRecur4Subtraction(gum::DGNonOrderedOperatorData<double>&, <unresolved overloaded function type>, std::string&)’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:406:53: note: template<class GUM_SCALAR> gum::NodeId gum::DecisionGraphRecur4Subtraction(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string)
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Subtraction
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:406:53: note:   template argument deduction/substitution failed:
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Subtraction
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:412:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note:   cannot convert ‘leaderNode->gum::MultiDimDecisionGraph<GUM_SCALAR>::InternalNode::nodeVar<double>’ (type ‘<unresolved overloaded function type>’) to type ‘const gum::DiscreteVariable*’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: invalid use of member function (did you forget the ‘()’ ?)
             MultiDimDecisionGraph<GUM_SCALAR>::soa.deallocate( sonsIds, leaderNode->nodeVar->domainSize() * sizeof( NodeId ) );
                                                                                            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:236:19: error: ‘class gum::MultiDimDecisionGraphManager<double>’ has no member named ‘checkIsomorphism’
           newNode = opData.DG3->manager()->checkIsomorphism( leaderNode->nodeVar, sonsIds );
                   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<double>::addNonTerminalNode(<unresolved overloaded function type>, gum::NodeId*&)’
             newNode = opData.DG3->manager()->addNonTerminalNode( leaderNode->nodeVar, sonsIds );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h: In instantiation of ‘gum::NodeId gum::DecisionGraphRecur4Multiplication(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string) [with GUM_SCALAR = double; gum::NodeId = unsigned int; std::string = std::basic_string<char>]’:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/operatorPattern4MultiDimDecisionGraph.h:89:110:   required from ‘gum::MultiDimImplementation<GUM_SCALAR>* gum::multiply2MultiDimDecisionGraphs(const gum::MultiDimImplementation<GUM_SCALAR>*, const gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:692:71:   required from ‘void gum::operators4MultiDimInit() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:394:55:   required from ‘void gum::Operators4MultiDimInitialize<GUM_SCALAR>::init() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:49:7:   required from ‘gum::MultiDimDecorator<GUM_SCALAR>::MultiDimDecorator(gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.tcc:34:69:   required from ‘gum::Potential<GUM_SCALAR>::Potential() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:24:21:   required from here
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
           indexFin = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                    ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:142:25: error: ‘class gum::MultiDimDecisionGraphManager<double>’ has no member named ‘checkIsomorphism’
                 newNode = opData.DG3->manager()->checkIsomorphism( preneededVar, sonsIds );
                         ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<double>::addNonTerminalNode(const gum::DiscreteVariable*&, gum::NodeId*&)’
                   newNode = opData.DG3->manager()->addNonTerminalNode( preneededVar, sonsIds );
                           ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int] <near match>
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 2 from ‘gum::NodeId* {aka unsigned int*}’ to ‘gum::NodeId {aka unsigned int}’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexLeader = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexFollower = opData.DG3->variablesSequence().pos( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar );
                       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: invalid use of member function (did you forget the ‘()’ ?)
         NodeId* sonsIds = static_cast<NodeId*>( MultiDimDecisionGraph<GUM_SCALAR>::soa.allocate( leaderNode->nodeVar->domainSize() * sizeof( NodeId ) ) );
                                                                                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: invalid use of member function (did you forget the ‘()’ ?)
         for ( Idx modality = 0; modality < leaderNode->nodeVar->domainSize(); modality++ ) {
                                                               ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:224:56: error: ‘const class gum::MultiDimDecisionGraph<double>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG1Node( leaderNode->nodeSons[ modality ] );
                                                        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:225:58: error: ‘const class gum::MultiDimDecisionGraph<double>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG2Node( followerNode->nodeSons[ modality ] );
                                                          ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: error: no matching function for call to ‘DecisionGraphRecur4Multiplication(gum::DGNonOrderedOperatorData<double>&, <unresolved overloaded function type>, std::string&)’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:437:53: note: template<class GUM_SCALAR> gum::NodeId gum::DecisionGraphRecur4Multiplication(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string)
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Multiplication
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:437:53: note:   template argument deduction/substitution failed:
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Multiplication
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:443:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note:   cannot convert ‘leaderNode->gum::MultiDimDecisionGraph<GUM_SCALAR>::InternalNode::nodeVar<double>’ (type ‘<unresolved overloaded function type>’) to type ‘const gum::DiscreteVariable*’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: invalid use of member function (did you forget the ‘()’ ?)
             MultiDimDecisionGraph<GUM_SCALAR>::soa.deallocate( sonsIds, leaderNode->nodeVar->domainSize() * sizeof( NodeId ) );
                                                                                            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:236:19: error: ‘class gum::MultiDimDecisionGraphManager<double>’ has no member named ‘checkIsomorphism’
           newNode = opData.DG3->manager()->checkIsomorphism( leaderNode->nodeVar, sonsIds );
                   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<double>::addNonTerminalNode(<unresolved overloaded function type>, gum::NodeId*&)’
             newNode = opData.DG3->manager()->addNonTerminalNode( leaderNode->nodeVar, sonsIds );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h: In instantiation of ‘gum::NodeId gum::DecisionGraphRecur4Division(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string) [with GUM_SCALAR = double; gum::NodeId = unsigned int; std::string = std::basic_string<char>]’:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/operatorPattern4MultiDimDecisionGraph.h:89:110:   required from ‘gum::MultiDimImplementation<GUM_SCALAR>* gum::divide2MultiDimDecisionGraphs(const gum::MultiDimImplementation<GUM_SCALAR>*, const gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:694:69:   required from ‘void gum::operators4MultiDimInit() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:394:55:   required from ‘void gum::Operators4MultiDimInitialize<GUM_SCALAR>::init() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:49:7:   required from ‘gum::MultiDimDecorator<GUM_SCALAR>::MultiDimDecorator(gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.tcc:34:69:   required from ‘gum::Potential<GUM_SCALAR>::Potential() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:24:21:   required from here
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
           indexFin = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                    ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:110:20: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:142:25: error: ‘class gum::MultiDimDecisionGraphManager<double>’ has no member named ‘checkIsomorphism’
                 newNode = opData.DG3->manager()->checkIsomorphism( preneededVar, sonsIds );
                         ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<double>::addNonTerminalNode(const gum::DiscreteVariable*&, gum::NodeId*&)’
                   newNode = opData.DG3->manager()->addNonTerminalNode( preneededVar, sonsIds );
                           ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:144:27: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int] <near match>
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 2 from ‘gum::NodeId* {aka unsigned int*}’ to ‘gum::NodeId {aka unsigned int}’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:185:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexLeader = opData.DG3->variablesSequence().pos( opData.DG1->node( opData.conti.getDG1Node() )->nodeVar );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:186:21: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::exists(<unresolved overloaded function type>) const’
       if ( opData.DG3->variablesSequence().exists( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar ) )
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:188:7: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note: bool gum::Sequence<KEY*>::exists(KEY*) const [with KEY = const gum::DiscreteVariable]
   bool Sequence<KEY*>::exists( KEY* const k ) const  {
        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:825:8: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
         indexFollower = opData.DG3->variablesSequence().pos( opData.DG2->node( opData.conti.getDG2Node() )->nodeVar );
                       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:189:23: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: invalid use of member function (did you forget the ‘()’ ?)
         NodeId* sonsIds = static_cast<NodeId*>( MultiDimDecisionGraph<GUM_SCALAR>::soa.allocate( leaderNode->nodeVar->domainSize() * sizeof( NodeId ) ) );
                                                                                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:219:117: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: invalid use of member function (did you forget the ‘()’ ?)
         for ( Idx modality = 0; modality < leaderNode->nodeVar->domainSize(); modality++ ) {
                                                               ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:222:63: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:224:56: error: ‘const class gum::MultiDimDecisionGraph<double>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG1Node( leaderNode->nodeSons[ modality ] );
                                                        ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:225:58: error: ‘const class gum::MultiDimDecisionGraph<double>::InternalNode’ has no member named ‘nodeSons’
           opData.conti.setDG2Node( followerNode->nodeSons[ modality ] );
                                                          ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: error: no matching function for call to ‘DecisionGraphRecur4Division(gum::DGNonOrderedOperatorData<double>&, <unresolved overloaded function type>, std::string&)’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:467:53: note: template<class GUM_SCALAR> gum::NodeId gum::DecisionGraphRecur4Division(gum::DGNonOrderedOperatorData<GUM_SCALAR>&, const gum::DiscreteVariable*, std::string)
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Division
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:467:53: note:   template argument deduction/substitution failed:
 #define GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION DecisionGraphRecur4Division
                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:56:3: note: in expansion of macro ‘GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION’
   GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( DGNonOrderedOperatorData< GUM_SCALAR >& opData,
   ^
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:473:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:227:112: note:   cannot convert ‘leaderNode->gum::MultiDimDecisionGraph<GUM_SCALAR>::InternalNode::nodeVar<double>’ (type ‘<unresolved overloaded function type>’) to type ‘const gum::DiscreteVariable*’
           sonsIds[ modality ] = GUM_MULTI_DIM_DECISION_GRAPH_RECUR_FUNCTION( opData, leaderNode->nodeVar, tabu );
                                                                                                                ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: invalid use of member function (did you forget the ‘()’ ?)
             MultiDimDecisionGraph<GUM_SCALAR>::soa.deallocate( sonsIds, leaderNode->nodeVar->domainSize() * sizeof( NodeId ) );
                                                                                            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:234:92: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:236:19: error: ‘class gum::MultiDimDecisionGraphManager<double>’ has no member named ‘checkIsomorphism’
           newNode = opData.DG3->manager()->checkIsomorphism( leaderNode->nodeVar, sonsIds );
                   ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: error: no matching function for call to ‘gum::MultiDimDecisionGraphManager<double>::addNonTerminalNode(<unresolved overloaded function type>, gum::NodeId*&)’
             newNode = opData.DG3->manager()->addNonTerminalNode( leaderNode->nodeVar, sonsIds );
                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:238:21: note: candidates are:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:81:12: note:   candidate expects 1 argument, 2 provided
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note: gum::NodeId gum::MultiDimDecisionGraphManager<GUM_SCALAR>::addNonTerminalNode(const gum::DiscreteVariable*, gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int]
     NodeId MultiDimDecisionGraphManager< GUM_SCALAR>::addNonTerminalNode ( const DiscreteVariable* var, NodeId nid ){
            ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:112:12: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:32:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGMiscellaneous.h: In instantiation of ‘void gum::DGNonOrderedOperatorData<GUM_SCALAR>::__findRetrogradeVariables(gum::NodeId, gum::HashTable<unsigned int, gum::Set<const gum::DiscreteVariable*>*>&) [with GUM_SCALAR = float; gum::NodeId = unsigned int]’:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGMiscellaneous.h:162:69:   required from ‘void gum::DGNonOrderedOperatorData<GUM_SCALAR>::initialize(const gum::MultiDimDecisionGraph<GUM_SCALAR>*, const gum::MultiDimDecisionGraph<GUM_SCALAR>*) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/operatorPattern4MultiDimDecisionGraph.h:84:9:   required from ‘gum::MultiDimImplementation<GUM_SCALAR>* gum::add2MultiDimDecisionGraphs(const gum::MultiDimImplementation<GUM_SCALAR>*, const gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:688:66:   required from ‘void gum::operators4MultiDimInit() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:394:55:   required from ‘void gum::Operators4MultiDimInitialize<GUM_SCALAR>::init() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:49:7:   required from ‘gum::MultiDimDecorator<GUM_SCALAR>::MultiDimDecorator(gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.tcc:34:69:   required from ‘gum::Potential<GUM_SCALAR>::Potential() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:23:21:   required from here
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGMiscellaneous.h:314:82: error: invalid use of member function (did you forget the ‘()’ ?)
           for( Idx sonIndex = 0; sonIndex < this->DG2->node(currentNode)->nodeVar->domainSize(); sonIndex++ ){
                                                                                  ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGMiscellaneous.h:314:82: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGMiscellaneous.h:315:75: error: ‘const class gum::MultiDimDecisionGraph<float>::InternalNode’ has no member named ‘nodeSons’
               NodeId currentSonId = this->DG2->node(currentNode)->nodeSons[sonIndex];
                                                                           ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGMiscellaneous.h:321:74: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
                       if( this->DG3->variablesSequence().pos( *varIter ) < this->DG3->variablesSequence().pos( this->DG2->node(currentNode)->nodeVar ) )
                                                                          ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGMiscellaneous.h:321:74: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGWithoutOrderRecursionFunctionsDebug.h:32:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:381,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:418,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGMiscellaneous.h: In instantiation of ‘void gum::DGNonOrderedOperatorData<GUM_SCALAR>::__findRetrogradeVariables(gum::NodeId, gum::HashTable<unsigned int, gum::Set<const gum::DiscreteVariable*>*>&) [with GUM_SCALAR = double; gum::NodeId = unsigned int]’:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGMiscellaneous.h:162:69:   required from ‘void gum::DGNonOrderedOperatorData<GUM_SCALAR>::initialize(const gum::MultiDimDecisionGraph<GUM_SCALAR>*, const gum::MultiDimDecisionGraph<GUM_SCALAR>*) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/operatorPattern4MultiDimDecisionGraph.h:84:9:   required from ‘gum::MultiDimImplementation<GUM_SCALAR>* gum::add2MultiDimDecisionGraphs(const gum::MultiDimImplementation<GUM_SCALAR>*, const gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:688:66:   required from ‘void gum::operators4MultiDimInit() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:394:55:   required from ‘void gum::Operators4MultiDimInitialize<GUM_SCALAR>::init() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:49:7:   required from ‘gum::MultiDimDecorator<GUM_SCALAR>::MultiDimDecorator(gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.tcc:34:69:   required from ‘gum::Potential<GUM_SCALAR>::Potential() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:24:21:   required from here
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGMiscellaneous.h:314:82: error: invalid use of member function (did you forget the ‘()’ ?)
           for( Idx sonIndex = 0; sonIndex < this->DG2->node(currentNode)->nodeVar->domainSize(); sonIndex++ ){
                                                                                  ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGMiscellaneous.h:314:82: error: base operand of ‘->’ is not a pointer
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGMiscellaneous.h:315:75: error: ‘const class gum::MultiDimDecisionGraph<double>::InternalNode’ has no member named ‘nodeSons’
               NodeId currentSonId = this->DG2->node(currentNode)->nodeSons[sonIndex];
                                                                           ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGMiscellaneous.h:321:74: error: no matching function for call to ‘gum::Sequence<const gum::DiscreteVariable*>::pos(<unresolved overloaded function type>) const’
                       if( this->DG3->variablesSequence().pos( *varIter ) < this->DG3->variablesSequence().pos( this->DG2->node(currentNode)->nodeVar ) )
                                                                          ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/DGUtility/o4DGMiscellaneous.h:321:74: note: candidate is:
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.h:927:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimInterface.h:47,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/instantiation.h:123,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimAdressable.h:38,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimContainer.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimImplementation.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimWithOffset.h:34,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimArray.h:32,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:35,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note: gum::Idx gum::Sequence<KEY*>::pos(KEY*) const [with KEY = const gum::DiscreteVariable; gum::Idx = unsigned int]
   Idx Sequence<KEY*>::pos( KEY* const key ) const {
       ^
/home/zucabar/Code/aGrUM-dev/src/agrum/core/sequence.tcc:854:7: note:   no known conversion for argument 1 from ‘<unresolved overloaded function type>’ to ‘const gum::DiscreteVariable*’
In file included from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.h:241:0,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.h:42,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:33,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:23,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.h:349,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.h:36,
                 from /home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:21:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc: In instantiation of ‘void gum::MultiDimDecisionGraphManager<GUM_SCALAR>::eraseNode(gum::NodeId) [with GUM_SCALAR = float; gum::NodeId = unsigned int]’:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.tcc:313:11:   required from ‘void gum::MultiDimDecisionGraph<GUM_SCALAR>::erase(const gum::DiscreteVariable&) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.tcc:525:9:   required from ‘void gum::MultiDimDecisionGraph<GUM_SCALAR>::clear() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.tcc:455:7:   required from ‘void gum::MultiDimDecisionGraph<GUM_SCALAR>::copy(const gum::MultiDimDecisionGraph<GUM_SCALAR>&) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/operatorPattern4MultiDimDecisionGraph.h:71:11:   required from ‘gum::MultiDimImplementation<GUM_SCALAR>* gum::add2MultiDimDecisionGraphs(const gum::MultiDimImplementation<GUM_SCALAR>*, const gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:688:66:   required from ‘void gum::operators4MultiDimInit() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:394:55:   required from ‘void gum::Operators4MultiDimInitialize<GUM_SCALAR>::init() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:49:7:   required from ‘gum::MultiDimDecorator<GUM_SCALAR>::MultiDimDecorator(gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.tcc:34:69:   required from ‘gum::Potential<GUM_SCALAR>::Potential() [with GUM_SCALAR = float]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:23:21:   required from here
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:181:85: error: lvalue required as left operand of assignment
               __decisionGraph->__internalNodeMap[currentElem->elemId]->son(iterSon) = 0;
                                                                                     ^
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc: In instantiation of ‘void gum::MultiDimDecisionGraphManager<GUM_SCALAR>::eraseNode(gum::NodeId) [with GUM_SCALAR = double; gum::NodeId = unsigned int]’:
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.tcc:313:11:   required from ‘void gum::MultiDimDecisionGraph<GUM_SCALAR>::erase(const gum::DiscreteVariable&) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.tcc:525:9:   required from ‘void gum::MultiDimDecisionGraph<GUM_SCALAR>::clear() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraph.tcc:455:7:   required from ‘void gum::MultiDimDecisionGraph<GUM_SCALAR>::copy(const gum::MultiDimDecisionGraph<GUM_SCALAR>&) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/patterns/operatorPattern4MultiDimDecisionGraph.h:71:11:   required from ‘gum::MultiDimImplementation<GUM_SCALAR>* gum::add2MultiDimDecisionGraphs(const gum::MultiDimImplementation<GUM_SCALAR>*, const gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.tcc:688:66:   required from ‘void gum::operators4MultiDimInit() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/operators/operators4MultiDim.h:394:55:   required from ‘void gum::Operators4MultiDimInitialize<GUM_SCALAR>::init() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecorator.tcc:49:7:   required from ‘gum::MultiDimDecorator<GUM_SCALAR>::MultiDimDecorator(gum::MultiDimImplementation<GUM_SCALAR>*) [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.tcc:34:69:   required from ‘gum::Potential<GUM_SCALAR>::Potential() [with GUM_SCALAR = double]’
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/potential.cpp:24:21:   required from here
/home/zucabar/Code/aGrUM-dev/src/agrum/multidim/multiDimDecisionGraphManager.tcc:181:85: error: lvalue required as left operand of assignment
make[3]: *** [CMakeFiles/agrum-dbg.dir/agrum/multidim/potential.cpp.o] Erreur 1
make[3]: *** Attente des tâches non terminées....
make[2]: *** [CMakeFiles/agrum-dbg.dir/all] Erreur 2
make[1]: *** [CMakeFiles/agrum-dbg.dir/rule] Erreur 2
make: *** [agrum-dbg] Erreur 2
