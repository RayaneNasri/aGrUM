
Vous pouvez mettre ici les bugs rencontrés (soyez le plus explicite possible) 
dans la section BUGS, les améliorations des fonctionnalités existantes dans la
section AMELIORATIONS, et les nouvelles fonctionnalités désirées dans la section TODOS.

Dans tous les cas, laissez votre mail ou vos coordonnées au cas où nous aurions besoin 
de plus d'informations.

Pensez ainsi à commiter les changements fait à ce fichier sur le serveur !

BUGS :


AMELIORATIONS :

	* Faire la sauvegarde des fichiers/projets ouverts/fermés directement, 
    	ne pas attendre la fermeture (en cas de crash).
	* Lien entre le nom de la classe ou du system ou des requêtes et le nom du fichier,
		à la sauvegarde.
	* Lien entre le nom du package et le répertoire du fichier,	à la sauvegarde.
	* Mettre dans les préférences la politique commenter/décommenter : 
		- soit on fait juste l'inversion, ligne par ligne;
	    - soit si toutes les lignes sont commentées, on décommente, sinon on commente.
	* Ne supprimer le fichier de config qu'avec le purge pour apt-get.

TODOS :
  
	* Pour le parser : ajouter un warning si deux classes/systèmes sont définis dans le même fichier.  
	
	* Utiliser la barre de status pour mettre différent informations : 
		- Nom complet du fichier (sci->filename);
		- Numéro de ligne et colonne du curseur;
		- Indicateur bien visible pour savoir l'état des touches Insert et Verr. Majuscule
		- Nombre de ligne, de mot, de caractère...
	* F6 sur un fichier de classe crée un fichier system, F6 sur un fichier system
		crée un fichier requête.
	* Indentation automatique du fichier.
	* Génération de la documentation (style Javadoc ou Doxygen)
	* Outils de refactoring
    
	* Clic droit sur un package du projet => menu avec
		- créer un package;
		- créer une classe/système/requête;
		- renommer;
		- supprimer;
	* Drag and drop de package dans l'explorateur 
		=> update les packages des fichiers dedans
		=> update les import dans les autres fichiers.
	* Ajouter à l'explorateur de projet les répertoires qui ont été ajoutés 
		dans les propriétés de projet (mais en ReadOnly).
		=> Avec un autre QTreeView ?
	* Couleur différent entre les fichiers ouverts qui appartiennent au projet et les autres.
  
	* Finir les préférences de l'éditeur.
	* Dans les préférences, choix des couleurs des différents éléments.
  
	* Se souvenir des marqueurs dans les fichiers ouverts quand on relance le programme ?
		Pour tout les fichiers du projet, dans le .skoop ?

	* Améliorer l'autocomplétion avec en plus les packages, classes du package etc...
	* Rendre l'autocomplétion contextuel quand on fait "MaClass.unAttribut", 
    	l'autocomplétion ne va chercher que dans les attributs de cette class.
    	Idem pour "system.class".
	* Quand on change d'onglet, sauvegarder les symboles dans le fichier projet 
		pour l'autocomplétion dans les autres fichiers du même projet.
	* Auto import des classes/systèmes nécessaires.
	
	* Intégrer la table d'édition de CPT.
  
	* Documentation du code.
  
	* Si il y a un message d'erreur qui indique qu'un type/classe/système n'est pas trouvé, faire des propositions pour les intégrer.
	* Bulle avec le message d'erreur quand on reste sur une erreur (soulignement ou surlignement).

	* Dans SkoolReader, si un type est pas trouvé, chercher dans le même répertoire (voir avec phw).
  
	* Sauvegarde automatique dans un fichier temporaire en cas de crash (de même que tout un tas d'autres infos).
