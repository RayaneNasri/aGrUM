project(pyAgrum)

cmake_minimum_required(VERSION 2.6)

find_package(SWIG REQUIRED)
include(${SWIG_USE_FILE})

find_package(PythonInterp)
find_package(PythonLibs ${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}.${PYTHON_VERSION_PATCH} EXACT)

execute_process(
  COMMAND ${PYTHON_EXECUTABLE} -c "from distutils import sysconfig; print sysconfig.get_python_lib(1,0,prefix='${CMAKE_INSTALL_PREFIX}')"
  OUTPUT_VARIABLE PYTHON_INSTALL
  OUTPUT_STRIP_TRAILING_WHITESPACE
)

# execute_process(
#   COMMAND ${PYTHON_EXECUTABLE} -c "from distutils import sysconfig; print sysconfig.get_python_version()"
#   OUTPUT_VARIABLE PYTHON_VERSION
#   OUTPUT_STRIP_TRAILING_WHITESPACE
#   # why not
#   # SET(PYTHON_VERSION) "${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}")
#   # ?
# )

set(PYAGRUMFILE "pyAgrum.i")
set(SWIGFILE "aGrUM_wrap.i")
set(SWIG_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../swig/")

file(GLOB_RECURSE PYAGRUM_EXTENSIONS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} extensions/*.h)

add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${PYAGRUMFILE}
    COMMAND ${CMAKE_COMMAND}
    ARGS -E copy ${CMAKE_CURRENT_SOURCE_DIR}/${PYAGRUMFILE} ${CMAKE_CURRENT_BINARY_DIR}/${PYAGRUMFILE}
    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${PYAGRUMFILE}
)
add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${SWIGFILE}
    COMMAND ${CMAKE_COMMAND}
    ARGS -E copy ${SWIG_SOURCE_DIR}/${SWIGFILE} ${CMAKE_CURRENT_BINARY_DIR}/${SWIGFILE}
    DEPENDS ${SWIG_SOURCE_DIR}/${SWIGFILE}
)

add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/extensions
    COMMAND ${CMAKE_COMMAND}
    ARGS -E make_directory ${CMAKE_CURRENT_BINARY_DIR}/extensions
)

foreach(EXTENSION_FILE ${PYAGRUM_EXTENSIONS})
    add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${EXTENSION_FILE}
        COMMAND ${CMAKE_COMMAND}
        ARGS -E copy ${CMAKE_CURRENT_SOURCE_DIR}/${EXTENSION_FILE} ${CMAKE_CURRENT_BINARY_DIR}/${EXTENSION_FILE}
        DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${EXTENSION_FILE} ${CMAKE_CURRENT_BINARY_DIR}/extensions
    )
    set(SWIG_MODULE_pyAgrum_EXTRA_DEPS ${EXTENSION_FILE})
endforeach(EXTENSION_FILE ${PYAGRUM_EXTENSIONS})


set(AGRUM_SRC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../src")
include_directories(${AGRUM_SRC_DIR})
file(GLOB_RECURSE AGRUM_CORE_SOURCES RELATIVE ${CMAKE_CURRENT_BINARY_DIR} ${AGRUM_SRC_DIR}/agrum/core/*.cpp)
file(GLOB_RECURSE AGRUM_BN_SOURCES RELATIVE ${CMAKE_CURRENT_BINARY_DIR} ${AGRUM_SRC_DIR}/agrum/BN/*.cpp)
file(GLOB_RECURSE AGRUM_GRAPHICALMODEL_SOURCES RELATIVE ${CMAKE_CURRENT_BINARY_DIR} ${AGRUM_SRC_DIR}/agrum/graphicalModels/*.cpp)
file(GLOB_RECURSE AGRUM_GRAPHS_SOURCES RELATIVE ${CMAKE_CURRENT_BINARY_DIR} ${AGRUM_SRC_DIR}/agrum/graphs/*.cpp)
file(GLOB_RECURSE AGRUM_MULTIDIM_SOURCES RELATIVE ${CMAKE_CURRENT_BINARY_DIR} ${AGRUM_SRC_DIR}/agrum/multidim/*.cpp)
file(GLOB_RECURSE AGRUM_VARIABLES_SOURCES RELATIVE ${CMAKE_CURRENT_BINARY_DIR} ${AGRUM_SRC_DIR}/agrum/variables/*.cpp)
file(GLOB_RECURSE AGRUM_LEARNING_SOURCES RELATIVE ${CMAKE_CURRENT_BINARY_DIR} ${AGRUM_SRC_DIR}/agrum/learning/*.cpp)

# Properties
set(CMAKE_SWIG_FLAGS  "-Wall" )
set(SWIG_MODULE_pyAgrum_EXTRA_DEPS ${SWIGFILE} ${PYAGRUM_EXTENSIONS})
set(CMAKE_SWIG_OUTDIR ${CMAKE_CURRENT_BINARY_DIR})

set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/${PYAGRUMFILE} PROPERTIES CPLUSPLUS ON)
set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/${PYAGRUMFILE} PROPERTIES SWIG_FLAGS  "-I${AGRUM_SRC_DIR}")

set(AGRUM_OPTIMIZATION "-O3 -Wall -Wno-uninitialized -DNDEBUG" )
set(AGRUM_INLINING_POLICY "")
set(CMAKE_CXX_FLAGS_RELEASE "${AGRUM_OPTIMIZATION} ${AGRUM_INLINING_POLICY} -I${AGRUM_SRC_DIR}")

foreach(CPP_FILE ${AGRUM_CORE_SOURCES} ${AGRUM_BN_SOURCES} ${AGRUM_GRAPHICALMODEL_SOURCES} ${AGRUM_GRAPHS_SOURCES} ${AGRUM_MULTIDIM_SOURCES} ${AGRUM_VARIABLES_SOURCES})
    set_source_files_properties(${CPP_FILE} PROPERTIES COMPILE_FLAGS  ${CMAKE_CXX_FLAGS_RELEASE})
endforeach(CPP_FILE ${AGRUM_CORE_SOURCES} ${AGRUM_BN_SOURCES} ${AGRUM_GRAPHICALMODEL_SOURCES} ${AGRUM_GRAPHS_SOURCES} ${AGRUM_MULTIDIM_SOURCES} ${AGRUM_VARIABLES_SOURCES})

# Build
swig_add_module(pyAgrum python ${CMAKE_CURRENT_BINARY_DIR}/${PYAGRUMFILE} ${AGRUM_CORE_SOURCES} ${AGRUM_BN_SOURCES} ${AGRUM_GRAPHICALMODEL_SOURCES} ${AGRUM_GRAPHS_SOURCES} ${AGRUM_MULTIDIM_SOURCES} ${AGRUM_VARIABLES_SOURCES})
#for now we do not take for pyAgrum the ${AGRUM_LEARNING_SOURCES}
swig_link_libraries(pyAgrum ${PYTHON_LIBRARIES})

set_target_properties(_pyAgrum PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
set_target_properties(_pyAgrum PROPERTIES COMPILE_FLAGS "${CMAKE_CXX_FLAGS_RELEASE} -I${PYTHON_INCLUDE_PATH}")

file(GLOB GUMLIB_FILES "${CMAKE_CURRENT_SOURCE_DIR}/../../apps/pyAgrum/gumLib/*.py")

include("${CMAKE_CURRENT_SOURCE_DIR}/../../src/version.txt")
set(PYAGRUM_VERSION "${AGRUM_VERSION_MAJOR}.${AGRUM_VERSION_MINOR}.${AGRUM_VERSION_PATCH}")
set(PYAGRUM_EGGFILE "pyAgrum-${PYAGRUM_VERSION}-py${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}.egg-info")

configure_file("${CMAKE_CURRENT_SOURCE_DIR}/cmake/__init__.in.py" "${CMAKE_CURRENT_BINARY_DIR}/__init__.py")
configure_file("${CMAKE_CURRENT_SOURCE_DIR}/cmake/egg-info.in" "${CMAKE_CURRENT_BINARY_DIR}/${PYAGRUM_EGGFILE}")

install(FILES ${CMAKE_CURRENT_BINARY_DIR}/__init__.py DESTINATION ${PYTHON_INSTALL}/pyAgrum)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PYAGRUM_EGGFILE} DESTINATION ${PYTHON_INSTALL})
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/pyAgrum.py DESTINATION ${PYTHON_INSTALL}/pyAgrum)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/_pyAgrum.so DESTINATION ${PYTHON_INSTALL}/pyAgrum)
install(FILES ${GUMLIB_FILES} DESTINATION ${PYTHON_INSTALL}/gumLib)
