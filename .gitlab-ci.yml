stages:
- agrum
- pyagrum
- agrum_test
- pyagrum_test
- wheels
- documentation

cache:
  untracked: false

################################################################################
# Linux / gcc
################################################################################
.linux_template: &linux_template
  only:
    - branches@agrumery/aGrUM
  except:
    - /^documentation.*$/
  tags:
    - linux
    - python3
    - gcc-5
  variables:
    CC: "/usr/bin/gcc-5"
    CXX: "/usr/bin/g++-5"
  cache:
    key: linux
    paths:
    - build/

linux_aGrUM_build:
  <<: *linux_template
  stage: agrum
  script:
    - if ! python act --no-fun lib release aGrUM --python=3; then  python act --no-fun clean ; python act --no-fun lib release aGrUM --python=3; fi

linux_pyAgrum_build:
  <<: *linux_template
  stage: pyagrum
  script:
    - if ! python act --no-fun lib release pyAgrum --python=3; then python act --no-fun clean ; python act --no-fun lib release pyAgrum --python=3; fi

linux_aGrUM_test:
  <<: *linux_template
  stage: agrum_test
  script:
    - if ! python act --no-fun test release aGrUM --python=3; then python act --no-fun clean ; python act --no-fun test release aGrUM --python=3; fi

linux_pyAgrum_test:
  <<: *linux_template
  stage: pyagrum_test
  script:
    - virtualenv venv --python=$(which python3)
    - source venv/bin/activate
    - pip install -r wrappers/pyAgrum/testunits/requirements.txt
    - if ! python act --no-fun test release pyAgrum --python=3 -t quick; then python act --no-fun clean ; python act --no-fun test release pyAgrum --python=3 -t quick; fi
    - deactivate

linux_pyagrum_wheel_i686:
  image: malichief/pyagrum_manylinux1_i686
  only:
    - tags
    - triggers
  tags:
    - linux
    - docker
    - manylinux1
  stage: wheels
  script:
    - /bin/bash wrappers/pyAgrum/wheelhouse/build_wheels.sh
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when: on_success
    expire_in: 1 week
    paths:
      - wheelhouse/*.whl

linux_pyagrum_wheel_x86_64:
  image: malichief/pyagrum_manylinux1_x86_64
  only:
    - tags
    - triggers
  tags:
    - linux
    - docker
    - manylinux1
  stage: wheels
  script:
    - /bin/bash wrappers/pyAgrum/wheelhouse/build_wheels.sh
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when: on_success
    expire_in: 1 week
    paths:
      - wheelhouse/*.whl

################################################################################
# MacOS / clang
################################################################################

.macos_template: &macos_template
  only:
    - branches@agrumery/aGrUM
  except:
    - /^documentation.*$/
  tags:
    - macos
    - python3
  variables:
    CC: "/usr/bin/clang"
    CXX: "/usr/bin/clang++"
  cache:
    key: macos
    paths:
    - build/

macos_aGrUM_build:
  <<: *macos_template
  stage: agrum
  script:
    - if ! python act --no-fun lib release aGrUM --python=3; then  python act --no-fun clean ; python act --no-fun lib release aGrUM --python=3; fi

macos_pyAgrum_build:
  <<: *macos_template
  stage: pyagrum
  script:
    - if ! python act --no-fun lib release pyAgrum --python=3; then python act --no-fun clean ; python act --no-fun lib release pyAgrum --python=3; fi

macos_aGrUM_test:
  <<: *macos_template
  stage: agrum_test
  script:
    - if ! python act --no-fun test release aGrUM --python=3; then python act --no-fun clean ; python act --no-fun test release aGrUM --python=3; fi

macos_pyAgrum_test:
  <<: *macos_template
  stage: pyagrum_test
  script:
    - virtualenv venv --python=$(which python3.6)
    - source venv/bin/activate
    - pip install -r wrappers/pyAgrum/testunits/requirements.txt
    - if ! python act --no-fun test release pyAgrum --python=3 -t quick; then python act --no-fun clean ; python act --no-fun test release pyAgrum --python=3 -t quick; fi
    - deactivate

macos_pyagrum_cp27_wheel:
  only:
    - tags
    - triggers
  tags:
    - macos
    - python3
  stage: wheels
  script:
    - rm -rf venv wheels
    - mkdir -p wheels
    - virtualenv venv --python=$(which python2.7)
    - source venv/bin/activate
    - python act release wheel pyAgrum -d ${CI_PROJECT_DIR}/wheels --python=2
    - deactivate
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when: on_success
    expire_in: 1 week
    paths:
      - wheels/*.whl

macos_pyagrum_cp36_wheel:
  only:
    - tags
    - triggers
  tags:
    - macos
    - python3
  stage: wheels
  script:
    - rm -rf venv wheels
    - mkdir -p wheels
    - virtualenv venv --python=$(which python3)
    - source venv/bin/activate
    - python act release wheel pyAgrum -d ${CI_PROJECT_DIR}/wheels --python=3
    - deactivate
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when: on_success
    expire_in: 1 week
    paths:
      - wheels/*.whl

################################################################################
# Windows / MVSC
################################################################################
.windows_template: &windows_template
  only:
    - branches@agrumery/aGrUM
  except:
    - /^documentation.*$/
  tags:
    - windows
    - conda64
  variables:
    PATH: "C:\\Program Files\\Git\\bin;C:\\Users\\conda64\\Anaconda3;C:\\Users\\conda64\\Anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\conda64\\Anaconda3\\Library\\usr\\bin;C:\\Users\\conda64\\Anaconda3\\Library\\bin;C:\\Users\\conda64\\Anaconda3\\Scripts;C:\\Program Files\\CMake\\bin;C:\\Program Files (x86)\\MSBuild\\14.0\\Bin;%PATH%;"
    ACT_OPTIONS: "--no-fun --mvsc -d build"
  cache:
    key: mvsc
    paths:
    - build/

windows_aGrUM_build:
  <<: *windows_template
  stage: agrum
  script:
    - python act --no-fun install release aGrUM %ACT_OPTIONS% || python act --no-fun clean && python act --no-fun lib release aGrUM %ACT_OPTIONS%

windows_pyAgrum_build:
  <<: *windows_template
  stage: pyagrum
  script:
    - python act --no-fun install release pyAgrum %ACT_OPTIONS% || python act --no-fun clean && python act --no-fun lib release pyAgrum %ACT_OPTIONS%

windows_aGrUM_test:
  <<: *windows_template
  stage: agrum_test
  script:
    - python act --no-fun test release aGrUM %ACT_OPTIONS% || python act --no-fun clean && python act --no-fun test release aGrUM %ACT_OPTIONS%

windows_pyAgrum_test:
  <<: *windows_template
  stage: pyagrum_test
  script:
    - pip install -r wrappers/pyAgrum/testunits/requirements.txt
    - python act --no-fun test release pyAgrum %ACT_OPTIONS%  -t quick || python act --no-fun clean && python act --no-fun test release pyAgrum %ACT_OPTIONS% -t quick

windows_32_pyagrum_cp27_wheels:
  only:
    - tags
    - triggers
  tags:
    - windows
    - conda32
  stage: wheels
  variables:
    PATH: "C:\\Program Files\\Git\\bin;C:\\Users\\conda32\\Anaconda3\\envs\\py27;C:\\Users\\conda32\\Anaconda3\\envs\\py27\\Library\\bin;C:\\Users\\conda32\\Anaconda3\\envs\\py27\\Scripts;C:\\Program Files\\CMake\\bin;C:\\Program Files (x86)\\MSBuild\\14.0\\Bin;%PATH%;"
    ACT_OPTIONS: "--no-fun --mvsc32 -d build"
  script:
    - md wheels
    - python act %ACT_OPTIONS% release wheel pyAgrum -d wheels
  artifacts:
    name: "%CI_JOB_NAME%_%CI_COMMIT_REF_NAME%"
    when: on_success
    expire_in: 1 week
    untracked: true
    paths:
      - wheels\\*.whl

windows_32_pyagrum_cp36_wheels:
  only:
    - tags
    - triggers
  tags:
    - windows
    - conda32
  stage: wheels
  variables:
    PATH: "C:\\Program Files\\Git\\bin;C:\\Users\\conda32\\Anaconda3\\envs\\py36;C:\\Users\\conda32\\Anaconda3\\envs\\py36\\Library\\bin;C:\\Users\\conda32\\Anaconda3\\envs\\py36\\Scripts;C:\\Program Files\\CMake\\bin;C:\\Program Files (x86)\\MSBuild\\14.0\\Bin;%PATH%;"
    ACT_OPTIONS: "--no-fun --mvsc32 -d build"
  script:
    - md wheels
    - python act %ACT_OPTIONS% release wheel pyAgrum -d wheels
  artifacts:
    name: "%CI_JOB_NAME%_%CI_COMMIT_REF_NAME%"
    when: on_success
    expire_in: 1 week
    untracked: true
    paths:
      - wheels\\*.whl

windows_64_pyagrum_cp27_wheels:
  only:
    - tags
    - triggers
  tags:
    - windows
    - conda64
  stage: wheels
  variables:
    PATH: "C:\\Program Files\\Git\\bin;C:\\Users\\conda64\\Anaconda3\\envs\\py27;C:\\Users\\conda64\\Anaconda3\\envs\\py27\\Library\\bin;C:\\Users\\conda64\\Anaconda3\\envs\\py27\\Scripts;C:\\Program Files\\CMake\\bin;C:\\Program Files (x86)\\MSBuild\\14.0\\Bin;%PATH%;"
    ACT_OPTIONS: "--no-fun --mvsc -d build"
  script:
    - md wheels
    - python act %ACT_OPTIONS% release wheel pyAgrum -d wheels
  artifacts:
    name: "%CI_JOB_NAME%_%CI_COMMIT_REF_NAME%"
    when: on_success
    expire_in: 1 week
    untracked: true
    paths:
      - wheels\\*.whl

windows_64_pyagrum_cp36_wheels:
  only:
    - tags
    - triggers
  tags:
    - windows
    - conda64
  stage: wheels
  variables:
    PATH: "C:\\Program Files\\Git\\bin;C:\\Users\\conda64\\Anaconda3\\envs\\py36;C:\\Users\\conda64\\Anaconda3\\envs\\py36\\Library\\bin;C:\\Users\\conda64\\Anaconda3\\envs\\py36\\Scripts;C:\\Program Files\\CMake\\bin;C:\\Program Files (x86)\\MSBuild\\14.0\\Bin;%PATH%;"
    ACT_OPTIONS: "--no-fun --mvsc -d build"
  script:
    - md wheels
    - python act %ACT_OPTIONS% release wheel pyAgrum -d wheels
  artifacts:
    name: "%CI_JOB_NAME%_%CI_COMMIT_REF_NAME%"
    when: on_success
    expire_in: 1 week
    untracked: true
    paths:
      - wheels\\*.whl

################################################################################
# pyAgrum Documentation
################################################################################
pyAgrum_documentation:
  only:
    - branches@agrumery/aGrUM
  tags:
    - linux
    - python3
    - deploy_ovh
  variables:
    CC: "/usr/bin/gcc-5"
    CXX: "/usr/bin/g++-5"
  cache:
    key: linux
    paths:
    - build/
  stage: documentation
  script:
    - virtualenv venv --python=python3
    - source venv/bin/activate
    - pip install -r wrappers/pyAgrum/testunits/requirements.txt
    - pip install sphinx
    - python act doc pyAgrum --python=3
    - deploy_ovh "build/release/wrappers/pyAgrum/docs/html" "www/pyAgrum/last/${CI_COMMIT_REF_NAME}"

pyAgrum_documentation_tags:
  only:
    - tags
  tags:
    - linux
    - python3
    - deploy_ovh
  cache:
  variables:
    CC: "/usr/bin/gcc-5"
    CXX: "/usr/bin/g++-5"
  cache:
    key: linux
    paths:
    - build/
  stage: documentation
  script:
    - virtualenv venv --python=python3
    - source venv/bin/activate
    - pip install -r wrappers/pyAgrum/testunits/requirements.txt
    - pip install sphinx
    - python act doc pyAgrum --python=3
    - deploy_ovh "build/release/wrappers/pyAgrum/docs/html" "www/pyAgrum/tags/${CI_COMMIT_TAG}"
    - deploy_ovh "build/release/wrappers/pyAgrum/docs/html" "www/pyAgrum/last"
    
